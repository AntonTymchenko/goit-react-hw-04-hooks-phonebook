{"version":3,"sources":["components/ContactsListItem/ContactsLitItem.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Panel/Panel.module.css","components/ContactsList/ContactList.module.css","components/Panel/Panel.js","components/ContactForm/ContactForm.js","components/Container/Container.js","components/ContactsListItem/ContactsListItem.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Panel","title","children","className","s","defaultProps","ContactForm","onSubmit","useState","name","setName","number","setNumber","inputGetValue","e","item","currentTarget","value","preventDefault","form","label","inputName","onChange","type","pattern","required","placeholder","inputFrom","AddBtn","Container","ContactsListItem","id","deleteContact","itemOflistOfContacts","info","icon","onClick","button","ContactsList","contacts","listContacts","map","Filter","onFilterChange","contactTitle","filterLabel","inputFilter","App","setContacts","filter","setFilter","useEffect","localStorage","getItem","parsedContacts","JSON","parse","window","setItem","stringify","contact","uuidv4","some","alert","state","event","length","toLowerCase","includes","contId","ReactDOM","render","document","querySelector"],"mappings":"6IACAA,EAAOC,QAAU,CAAC,qBAAuB,8CAA8C,KAAO,8BAA8B,KAAO,8BAA8B,OAAS,kC,iBCA1KD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,UAAY,+BAA+B,OAAS,4BAA4B,UAAY,+BAA+B,UAAY,iC,kBCA1LD,EAAOC,QAAU,CAAC,YAAc,4BAA4B,aAAe,6BAA6B,YAAc,8B,qCCAtHD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,aAAe,oC,+HCG3BC,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACZ,qCACE,oBAAIC,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,MAILF,EAAMK,aAAe,CACnBJ,MAAO,GACPC,SAAU,IAMGF,Q,gBCoDAM,MAnEf,YAAoC,IAAbC,EAAY,EAAZA,SACrB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEA,SAASC,EAAcC,GACrB,IAAMC,EAAOD,EAAEE,cAAcP,KACvBQ,EAAQH,EAAEE,cAAcC,MAE9B,OAAQF,GACN,IAAK,OACHL,EAAQO,GACR,MACF,IAAK,SACHL,EAAUK,GACV,MACF,QACE,QAUN,OACE,uBAAMV,SARR,SAA0BO,GACxBA,EAAEI,iBAEFX,EAASE,EAAME,GACfC,EAAU,IACVF,EAAQ,KAG0BP,UAAWC,IAAEe,KAA/C,UACE,wBAAOhB,UAAWC,IAAEgB,MAApB,iBAEE,uBACEjB,UAAWC,IAAEiB,UACbC,SAAUT,EACVU,KAAK,OACLN,MAAOR,EACPA,KAAK,OACLe,QAAQ,yHACRvB,MAAM,kcACNwB,UAAQ,EACRC,YAAY,mBAGhB,2CAEE,uBACEvB,UAAWC,IAAEuB,UACbL,SAAUT,EACVU,KAAK,MACLN,MAAON,EACPF,KAAK,SACLe,QAAQ,yFACRvB,MAAM,giBACNwB,UAAQ,EACRC,YAAY,kBAEd,wBAAQH,KAAK,SAASpB,UAAWC,IAAEwB,OAAnC,gC,MCpDOC,MAJf,YAAkC,IAAb3B,EAAY,EAAZA,SACnB,OAAO,sBAAKC,UAAU,aAAf,cAA8BD,M,gDCKvC,SAAS4B,EAAT,GAAgE,IAApCC,EAAmC,EAAnCA,GAAItB,EAA+B,EAA/BA,KAAME,EAAyB,EAAzBA,OAAQqB,EAAiB,EAAjBA,cAC5C,OACE,qBAAa7B,UAAWC,IAAE6B,qBAA1B,UACE,oBAAG9B,UAAWC,IAAE8B,KAAhB,UACE,sBAAM/B,UAAWC,IAAE+B,KAAnB,SACE,cAAC,IAAD,MAED1B,KAEH,oBAAGN,UAAWC,IAAE8B,KAAhB,UACE,sBAAM/B,UAAWC,IAAE+B,KAAnB,SACE,cAAC,IAAD,MAEDxB,KAEH,yBACEY,KAAK,SACLa,QAAS,kBAAMJ,EAAcD,IAC7B5B,UAAWC,IAAEiC,OAHf,UAKE,sBAAMlC,UAAWC,IAAE+B,KAAnB,SACE,cAAC,IAAD,MANJ,cAbOJ,GCWEO,MAhBf,YAAoD,IAA5BC,EAA2B,EAA3BA,SAAUP,EAAiB,EAAjBA,cAChC,OACE,oBAAI7B,UAAWC,IAAEoC,aAAjB,SACGD,EAASE,KAAI,gBAAGV,EAAH,EAAGA,GAAItB,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACZ,cAACmB,EAAD,CAEErB,KAAMA,EACNsB,GAAIA,EACJpB,OAAQA,EACRqB,cAAeA,GAJVD,S,gBCUAW,EAjBA,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAChB,OACE,qCACE,oBAAIxC,UAAWC,IAAEwC,aAAjB,sBACA,wBAAOzC,UAAWC,IAAEyC,YAApB,kCAEE,uBACEtB,KAAK,OACLD,SAAUqB,EACVxC,UAAWC,IAAE0C,YACbpB,YAAY,qC,MCgKPqB,MApKf,WACE,MAAgCvC,mBAAS,IAAzC,mBAAO+B,EAAP,KAAiBS,EAAjB,KACA,EAA4BxC,mBAAS,IAArC,mBAAOyC,EAAP,KAAeC,EAAf,KA2CA,OAZAC,qBAAU,WACR,IAAMZ,EAAWa,aAAaC,QAAQ,YAChCC,EAAiBC,KAAKC,MAAMjB,GAC9Be,GACFN,EAAYM,KAEb,IAEHH,qBAAU,WACRM,OAAOL,aAAaM,QAAQ,WAAYH,KAAKI,UAAUpB,MACtD,CAACA,IAGF,qCACE,iCACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAOtC,MAAM,YAAb,SACE,cAAC,EAAD,CAAaM,SA9CD,SAACE,EAAME,GAC3B,IAAMiD,EAAU,CACd7B,GAAI8B,cACJpD,OACAE,UAEE4B,EAASuB,MAAK,SAAC/C,GAAD,OAAUA,EAAKN,OAASmD,EAAQnD,QAChDsD,MAAM,GAAD,OAAIH,EAAQnD,KAAZ,6BAGPuC,GAAY,SAACgB,GAAD,OAAYJ,GAAZ,mBAAwBI,gBAyClC,kCACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAQrB,eAxCO,SAACsB,GACtBf,EAAUe,EAAMjD,cAAcC,UAyCH,IAApBsB,EAAS2B,OACR,mBAAG/D,UAAU,gBAAb,2CAEA,cAAC,EAAD,CACEoC,SA1CK,KAAXU,EACKV,EAEAA,EAASU,QAAO,SAACW,GAAD,OACrBA,EAAQnD,KAAK0D,cAAcC,SAASnB,EAAOkB,kBAuCrCnC,cAnCU,SAACqC,GACrBrB,GAAY,SAACgB,GAAD,OAAWA,EAAMf,QAAO,SAACW,GAAD,OAAaA,EAAQ7B,KAAOsC,oBCjCpEC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFC,SAASC,cAAc,Y","file":"static/js/main.c4572d81.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemOflistOfContacts\":\"ContactsLitItem_itemOflistOfContacts__r35W0\",\"icon\":\"ContactsLitItem_icon__2JDOB\",\"info\":\"ContactsLitItem_info__32NVa\",\"button\":\"ContactsLitItem_button__3-bwE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__R1mUe\",\"container\":\"ContactForm_container__1jzvd\",\"AddBtn\":\"ContactForm_AddBtn__3braU\",\"inputFrom\":\"ContactForm_inputFrom__zujGp\",\"inputName\":\"ContactForm_inputName__3odXs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputFilter\":\"Filter_inputFilter__2owR_\",\"contactTitle\":\"Filter_contactTitle__14lLZ\",\"filterLabel\":\"Filter_filterLabel__2fXgf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Panel_title__AaMMW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listContacts\":\"ContactList_listContacts__1q2dD\"};","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport s from \"./Panel.module.css\";\n\nconst Panel = ({ title, children }) => (\n  <>\n    <h1 className={s.title}>{title}</h1>\n    {children}\n  </>\n);\n\nPanel.defaultProps = {\n  title: \"\",\n  children: [],\n};\nPanel.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\nexport default Panel;\n","import { useState } from \"react\";\nimport s from \"./ContactForm.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  function inputGetValue(e) {\n    const item = e.currentTarget.name;\n    const value = e.currentTarget.value;\n\n    switch (item) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  }\n  function formHandleSubmit(e) {\n    e.preventDefault();\n\n    onSubmit(name, number);\n    setNumber(\"\");\n    setName(\"\");\n  }\n  return (\n    <form onSubmit={formHandleSubmit} className={s.form}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.inputName}\n          onChange={inputGetValue}\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          placeholder=\"Ivan Ivanov\"\n        />\n      </label>\n      <label>\n        Number\n        <input\n          className={s.inputFrom}\n          onChange={inputGetValue}\n          type=\"tel\"\n          value={number}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          placeholder=\"098 111 22 33\"\n        />\n        <button type=\"submit\" className={s.AddBtn}>\n          Add contact\n        </button>\n      </label>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import React from \"react\";\nimport \"./Container.css\";\n\nfunction Container({ children }) {\n  return <div className=\"containers\"> {children}</div>;\n}\n\nexport default Container;\n","import React from \"react\";\nimport s from \"./ContactsLitItem.module.css\";\nimport {\n  HiOutlinePhone,\n  HiOutlineUser,\n  HiOutlineArchive,\n} from \"react-icons/hi\";\nimport PropTypes from \"prop-types\";\n\nfunction ContactsListItem({ id, name, number, deleteContact }) {\n  return (\n    <li key={id} className={s.itemOflistOfContacts}>\n      <p className={s.info}>\n        <span className={s.icon}>\n          <HiOutlineUser />\n        </span>\n        {name}\n      </p>\n      <p className={s.info}>\n        <span className={s.icon}>\n          <HiOutlinePhone />\n        </span>\n        {number}\n      </p>\n      <button\n        type=\"button\"\n        onClick={() => deleteContact(id)}\n        className={s.button}\n      >\n        <span className={s.icon}>\n          <HiOutlineArchive />\n        </span>\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactsListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport { ContactsListItem };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.css\";\n\nimport { ContactsListItem } from \"../ContactsListItem/ContactsListItem\";\n\nfunction ContactsList({ contacts, deleteContact }) {\n  return (\n    <ul className={s.listContacts}>\n      {contacts.map(({ id, name, number }) => (\n        <ContactsListItem\n          key={id}\n          name={name}\n          id={id}\n          number={number}\n          deleteContact={deleteContact}\n        />\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactsList;\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  deleteContact: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ onFilterChange }) => {\n  return (\n    <>\n      <h2 className={s.contactTitle}>Contacts</h2>\n      <label className={s.filterLabel}>\n        Find contacts by name\n        <input\n          type=\"text\"\n          onChange={onFilterChange}\n          className={s.inputFilter}\n          placeholder=\"Who are you looking for ?\"\n        />\n      </label>\n    </>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  onFilterChange: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from \"react\";\nimport Panel from \"./components/Panel/Panel\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Container from \"./components/Container/Container\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactsList from \"./components/ContactsList/ContactsList\";\nimport Filter from \"./components/Filter\";\n\nimport \"./index.css\";\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n  const addNewContact = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    if (contacts.some((item) => item.name === contact.name)) {\n      alert(`${contact.name} is already in contacts!`);\n      return;\n    }\n    setContacts((state) => [contact, ...state]);\n  };\n\n  const onFilterChange = (event) => {\n    setFilter(event.currentTarget.value);\n  };\n  const getResultOfContacts = () => {\n    if (filter === \"\") {\n      return contacts;\n    } else {\n      return contacts.filter((contact) =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    }\n  };\n  const deleteContact = (contId) => {\n    setContacts((state) => state.filter((contact) => contact.id !== contId));\n  };\n\n  useEffect(() => {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      setContacts(parsedContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <>\n      <header>\n        <Container>\n          <Panel title=\"Phonebook\">\n            <ContactForm onSubmit={addNewContact} />\n          </Panel>\n        </Container>\n      </header>\n\n      <section>\n        <Container>\n          <Filter onFilterChange={onFilterChange} />\n\n          {contacts.length === 0 ? (\n            <p className=\"notifications\">There are not any contacts...</p>\n          ) : (\n            <ContactsList\n              contacts={getResultOfContacts()}\n              deleteContact={deleteContact}\n            />\n          )}\n        </Container>\n      </section>\n    </>\n  );\n}\n\n// class App extends React.Component {\n//   state = {\n//     contacts: [],\n//     filter: \"\",\n//   };\n\n//   componentDidMount() {\n//     const contacts = localStorage.getItem(\"contacts\");\n//     const parsedContacts = JSON.parse(contacts);\n//     if (parsedContacts) {\n//       this.setState({ contacts: parsedContacts });\n//     }\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     const nextContacts = this.state.contacts;\n//     const prevContacts = prevState.contacts;\n\n//     if (nextContacts !== prevContacts) {\n//       localStorage.setItem(\"contacts\", JSON.stringify(nextContacts));\n//     }\n//   }\n\n//   addNewContact = (name, number) => {\n//     const { contacts } = this.state;\n//     const contact = {\n//       id: uuidv4(),\n//       name,\n//       number,\n//     };\n//     if (contacts.some((item) => item.name === contact.name)) {\n//       alert(`${contact.name} is already in contacts!`);\n//       return;\n//     }\n\n//     this.setState(({ contacts }) => ({\n//       contacts: [contact, ...contacts],\n//     }));\n//   };\n\n//   deleteContact = (contId) => {\n// this.setState((prevState) => ({\n//   contacts: prevState.contacts.filter((contact) => contact.id !== contId),\n// }));\n//   };\n//   onFilterChange = (e) => {\n//     this.setState({\n//       filter: e.currentTarget.value,\n//     });\n//   };\n//   getResultOfContacts = () => {\n//     const { contacts, filter } = this.state;\n//     if (filter === \"\") {\n//       return contacts;\n//     } else {\n//       return contacts.filter((contact) =>\n//         contact.name.toLowerCase().includes(filter.toLowerCase())\n//       );\n//     }\n//   };\n\n//   render() {\n// return (\n//   <>\n//     <header>\n//       <Container>\n//         <Panel title=\"Phonebook\">\n//           <ContactForm onSubmit={this.addNewContact} />\n//         </Panel>\n//       </Container>\n//     </header>\n\n//     <section>\n//       <Container>\n//         <Filter onFilterChange={this.onFilterChange} />\n\n//         {this.state.contacts.length === 0 ? (\n//           <p className=\"notifications\">There are not any contacts...</p>\n//         ) : (\n//           <ContactsList\n//             contacts={this.getResultOfContacts()}\n//             deleteContact={this.deleteContact}\n//           />\n//         )}\n//       </Container>\n//     </section>\n//   </>\n// );\n//   }\n// }\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { StrictMode } from \"react\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}