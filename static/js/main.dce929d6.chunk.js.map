{"version":3,"sources":["components/ContactsListItem/ContactsLitItem.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Panel/Panel.module.css","components/ContactsList/ContactList.module.css","components/Panel/Panel.js","components/ContactForm/ContactForm.js","components/Container/Container.js","components/ContactsListItem/ContactsListItem.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Panel","title","children","className","s","defaultProps","ContactForm","state","name","number","inputGetValue","e","item","currentTarget","setState","value","formHandleSubmit","preventDefault","props","onSubmit","this","form","label","inputName","onChange","type","pattern","required","placeholder","inputFrom","AddBtn","React","Component","Container","ContactsListItem","id","deleteContact","itemOflistOfContacts","info","icon","onClick","button","ContactsList","contacts","class","listContacts","map","Filter","onFilterChange","contactTitle","filterLabel","inputFilter","App","filter","addNewContact","contact","uuidv4","some","alert","contId","prevState","getResultOfContacts","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","nextContacts","setItem","stringify","length","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.dce929d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemOflistOfContacts\":\"ContactsLitItem_itemOflistOfContacts__r35W0\",\"icon\":\"ContactsLitItem_icon__2JDOB\",\"info\":\"ContactsLitItem_info__32NVa\",\"button\":\"ContactsLitItem_button__3-bwE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__R1mUe\",\"container\":\"ContactForm_container__1jzvd\",\"AddBtn\":\"ContactForm_AddBtn__3braU\",\"inputFrom\":\"ContactForm_inputFrom__zujGp\",\"inputName\":\"ContactForm_inputName__3odXs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputFilter\":\"Filter_inputFilter__2owR_\",\"contactTitle\":\"Filter_contactTitle__14lLZ\",\"filterLabel\":\"Filter_filterLabel__2fXgf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Panel_title__AaMMW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listContacts\":\"ContactList_listContacts__1q2dD\"};","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport s from \"./Panel.module.css\";\n\nconst Panel = ({ title, children }) => (\n  <>\n    <h1 className={s.title}>{title}</h1>\n    {children}\n  </>\n);\n\nPanel.defaultProps = {\n  title: \"\",\n  children: [],\n};\nPanel.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\nexport default Panel;\n","import React from \"react\";\nimport s from \"./ContactForm.module.css\";\nimport PropTypes from \"prop-types\";\n\nclass ContactForm extends React.Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n  inputGetValue = (e) => {\n    const item = e.currentTarget.name;\n\n    this.setState({ [item]: e.currentTarget.value });\n  };\n\n  formHandleSubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n\n    this.props.onSubmit(name, number);\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n  render() {\n    return (\n      <form onSubmit={this.formHandleSubmit} className={s.form}>\n        <label className={s.label}>\n          Name\n          <input\n            className={s.inputName}\n            onChange={this.inputGetValue}\n            type=\"text\"\n            value={this.state.name}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            placeholder=\"Ivan Ivanov\"\n          />\n        </label>\n        <label>\n          Number\n          <input\n            className={s.inputFrom}\n            onChange={this.inputGetValue}\n            type=\"tel\"\n            value={this.state.number}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            placeholder=\"098-111-22-33\"\n          />\n          <button type=\"submit\" className={s.AddBtn}>\n            Add contact\n          </button>\n        </label>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import React from \"react\";\nimport \"./Container.css\";\n\nfunction Container({ children }) {\n  return <div className=\"containers\"> {children}</div>;\n}\n\nexport default Container;\n","import React from \"react\";\nimport s from \"./ContactsLitItem.module.css\";\nimport {\n  HiOutlinePhone,\n  HiOutlineUser,\n  HiOutlineArchive,\n} from \"react-icons/hi\";\nimport PropTypes from \"prop-types\";\n\nfunction ContactsListItem({ id, name, number, deleteContact }) {\n  return (\n    <li key={id} className={s.itemOflistOfContacts}>\n      <p className={s.info}>\n        <span className={s.icon}>\n          <HiOutlineUser />\n        </span>\n        {name}\n      </p>\n      <p className={s.info}>\n        <span className={s.icon}>\n          <HiOutlinePhone />\n        </span>\n        {number}\n      </p>\n      <button\n        type=\"button\"\n        onClick={() => deleteContact(id)}\n        className={s.button}\n      >\n        <span className={s.icon}>\n          <HiOutlineArchive />\n        </span>\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactsListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport { ContactsListItem };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.css\";\n\nimport { ContactsListItem } from \"../ContactsListItem/ContactsListItem\";\n\nfunction ContactsList({ contacts, deleteContact }) {\n  return (\n    <ul class={s.listContacts}>\n      {contacts.map(({ id, name, number }) => (\n        <ContactsListItem\n          key={id}\n          name={name}\n          id={id}\n          number={number}\n          deleteContact={deleteContact}\n        />\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactsList;\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  deleteContact: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ onFilterChange }) => {\n  return (\n    <>\n      <h2 className={s.contactTitle}>Contacts</h2>\n      <label className={s.filterLabel}>\n        Find contacts by name\n        <input\n          type=\"text\"\n          onChange={onFilterChange}\n          className={s.inputFilter}\n          placeholder=\"Who are you looking for ?\"\n        />\n      </label>\n    </>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  onFilterChange: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport Panel from \"./components/Panel/Panel\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Container from \"./components/Container/Container\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactsList from \"./components/ContactsList/ContactsList\";\nimport Filter from \"./components/Filter\";\n\nimport \"./index.css\";\n\nclass App extends React.Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const nextContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n\n    if (nextContacts !== prevContacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(nextContacts));\n    }\n  }\n\n  addNewContact = (name, number) => {\n    const { contacts } = this.state;\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    if (contacts.some((item) => item.name === contact.name)) {\n      alert(`${contact.name} is already in contacts!`);\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  deleteContact = (contId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== contId),\n    }));\n  };\n  onFilterChange = (e) => {\n    this.setState({\n      filter: e.currentTarget.value,\n    });\n  };\n  getResultOfContacts = () => {\n    const { contacts, filter } = this.state;\n    if (filter === \"\") {\n      return contacts;\n    } else {\n      return contacts.filter((contact) =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <header>\n          <Container>\n            <Panel title=\"Phonebook\">\n              <ContactForm onSubmit={this.addNewContact} />\n            </Panel>\n          </Container>\n        </header>\n\n        <section>\n          <Container>\n            <Filter onFilterChange={this.onFilterChange} />\n\n            {this.state.contacts.length === 0 ? (\n              <p className=\"notifications\">There are not any contacts...</p>\n            ) : (\n              <ContactsList\n                contacts={this.getResultOfContacts()}\n                deleteContact={this.deleteContact}\n              />\n            )}\n          </Container>\n        </section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { StrictMode } from \"react\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}